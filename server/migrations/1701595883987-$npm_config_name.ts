import { MigrationInterface, QueryRunner } from "typeorm";

export class $npmConfigName1701595883987 implements MigrationInterface {
    name = '$npmConfigName1701595883987'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TABLE "mpesa" ("id" SERIAL NOT NULL, "amountPaid" integer NOT NULL, "payingPhoneNumber" character varying NOT NULL, "transactionDate" TIMESTAMP DEFAULT now(), "mpesaReceiptNumber" character varying, "merchantRequestID" character varying NOT NULL, "checkoutRequestID" character varying NOT NULL, "paymentId" integer, CONSTRAINT "REL_4810097984b865f931e1ba11ee" UNIQUE ("paymentId"), CONSTRAINT "PK_9c106152c1527aeb1a524709442" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "payment" ("id" SERIAL NOT NULL, "amount" integer NOT NULL, "paymentDate" TIMESTAMP NOT NULL DEFAULT now(), "paymentMethod" character varying NOT NULL, "bookingId" integer, "mpesaId" integer, CONSTRAINT "REL_2df0f18e7ce1147ffd6b1a12c7" UNIQUE ("mpesaId"), CONSTRAINT "PK_fcaec7df5adf9cac408c686b2ab" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TYPE "public"."booking_status_enum" AS ENUM('Pending', 'Approved', 'Rejected')`);
        await queryRunner.query(`CREATE TYPE "public"."booking_bookingtype_enum" AS ENUM('Client', 'Admin')`);
        await queryRunner.query(`CREATE TABLE "booking" ("id" SERIAL NOT NULL, "status" "public"."booking_status_enum" NOT NULL DEFAULT 'Pending', "bookingType" "public"."booking_bookingtype_enum" NOT NULL DEFAULT 'Client', "bookedAtDate" TIMESTAMP NOT NULL DEFAULT now(), "updatedDate" TIMESTAMP NOT NULL DEFAULT now(), "remainingBalance" integer NOT NULL, "userId" integer, "tourId" integer, CONSTRAINT "PK_49171efc69702ed84c812f33540" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "checklist" ("id" SERIAL NOT NULL, "title" character varying NOT NULL, "isChecked" boolean NOT NULL, "taskId" integer, CONSTRAINT "PK_e4b437f5107f2a9d5b744d4eb4c" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TYPE "public"."task_priority_enum" AS ENUM('low priority', 'medium Priority', 'high priority')`);
        await queryRunner.query(`CREATE TABLE "task" ("id" SERIAL NOT NULL, "title" character varying NOT NULL, "priority" "public"."task_priority_enum" NOT NULL DEFAULT 'medium Priority', "description" character varying NOT NULL, "assignedTo" character varying NOT NULL, "dueDate" date NOT NULL, "status" character varying NOT NULL, "authorId" integer, CONSTRAINT "PK_fb213f79ee45060ba925ecd576e" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "comment" ("id" SERIAL NOT NULL, "comment" character varying NOT NULL, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "taskId" integer, "authorId" integer, CONSTRAINT "PK_0b0e4bbc8415ec426f87f3a88e2" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "custom_event" ("id" SERIAL NOT NULL, "title" character varying NOT NULL, "startDate" TIMESTAMP NOT NULL, "endDate" TIMESTAMP NOT NULL, "description" character varying, "allDay" boolean NOT NULL DEFAULT false, "tourId" integer, "userId" integer, CONSTRAINT "PK_702dea4f4002b7f1edfced16c9f" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TYPE "public"."notification_preference_notificationtype_enum" AS ENUM('bookingupdate', 'promotions', 'newsalert')`);
        await queryRunner.query(`CREATE TABLE "notification_preference" ("id" SERIAL NOT NULL, "emailEnabled" boolean NOT NULL DEFAULT true, "smsEnabled" boolean NOT NULL DEFAULT true, "inAppNotificationEnabled" boolean NOT NULL DEFAULT true, "notificationType" "public"."notification_preference_notificationtype_enum" NOT NULL DEFAULT 'bookingupdate', "userId" integer, CONSTRAINT "REL_c8721bd56ae600308745ad4974" UNIQUE ("userId"), CONSTRAINT "PK_ba8d816b10f3dcfcd2e71ce5776" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "address" ("id" SERIAL NOT NULL, "street" character varying NOT NULL, "city" character varying NOT NULL, "country" character varying NOT NULL, CONSTRAINT "PK_d92de1f82754668b5f5f5dd4fd5" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "local_file" ("id" SERIAL NOT NULL, "filename" character varying NOT NULL, "data" bytea NOT NULL, CONSTRAINT "PK_e391e00bc7475063fd45ee3f38d" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TYPE "public"."profile_status_enum" AS ENUM('active', 'inactive', 'pending')`);
        await queryRunner.query(`CREATE TYPE "public"."profile_group_enum" AS ENUM('bronze', 'silver', 'gold')`);
        await queryRunner.query(`CREATE TYPE "public"."profile_gender_enum" AS ENUM('male', 'female', 'other')`);
        await queryRunner.query(`CREATE TABLE "profile" ("id" SERIAL NOT NULL, "avatarId" integer, "points" integer, "balance" integer, "status" "public"."profile_status_enum" NOT NULL DEFAULT 'active', "group" "public"."profile_group_enum" NOT NULL DEFAULT 'bronze', "gender" "public"."profile_gender_enum" NOT NULL, CONSTRAINT "REL_65588ca8ac212b8357637794d6" UNIQUE ("avatarId"), CONSTRAINT "PK_3dd8bfc97e4a77c70971591bdcb" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TYPE "public"."user_permissions_enum" AS ENUM('canAccessAdminDashboard', 'isSuperAdmin', 'DeletePost', 'canBookTour', 'canAccesClientsProfile')`);
        await queryRunner.query(`CREATE TABLE "user" ("id" SERIAL NOT NULL, "name" character varying NOT NULL, "email" character varying NOT NULL, "phoneNumber" character varying, "isPhoneNumberConfirmed" boolean NOT NULL DEFAULT false, "permissions" "public"."user_permissions_enum" array NOT NULL DEFAULT '{}', "password" character varying, "isEmailConfirmed" boolean NOT NULL DEFAULT false, "isRegisteredWithGoogle" boolean NOT NULL DEFAULT false, "currentHashedRefreshToken" character varying, "resetLink" character varying, "addressId" integer, "profileId" integer, "notificationPreferencesId" integer, CONSTRAINT "UQ_e12875dfb3b1d92d7d7c5377e22" UNIQUE ("email"), CONSTRAINT "REL_217ba147c5de6c107f2fa7fa27" UNIQUE ("addressId"), CONSTRAINT "REL_9466682df91534dd95e4dbaa61" UNIQUE ("profileId"), CONSTRAINT "REL_3c60260ce0a4a18aaebccd63a6" UNIQUE ("notificationPreferencesId"), CONSTRAINT "PK_cace4a159ff9f2512dd42373760" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "review" ("id" SERIAL NOT NULL, "review" character varying NOT NULL, "rating" integer NOT NULL, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "tourId" integer, "reviewerId" integer, CONSTRAINT "PK_2e4299a343a81574217255c00ca" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TYPE "public"."tour_difficulty_enum" AS ENUM('easy', 'medium', 'difficult')`);
        await queryRunner.query(`CREATE TABLE "tour" ("id" SERIAL NOT NULL, "name" character varying NOT NULL, "startDate" TIMESTAMP NOT NULL, "endDate" TIMESTAMP NOT NULL, "price" integer NOT NULL, "tourType" character varying NOT NULL, "description" character varying NOT NULL, "imageCover" character varying, "difficulty" "public"."tour_difficulty_enum" NOT NULL DEFAULT 'medium', "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "etinerary" text array, "destinationId" integer, CONSTRAINT "PK_972cd7fa4ec39286068130fa3f7" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "destination" ("id" SERIAL NOT NULL, "name" character varying NOT NULL, "description" text NOT NULL, "rating" numeric(3,1), "contact" character varying NOT NULL, "imageId" integer, CONSTRAINT "REL_e4341255b2e3ca14ad6bb08aa8" UNIQUE ("imageId"), CONSTRAINT "PK_e45b5ee5788eb3c7f0ae41746e7" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "feature_flag" ("id" integer GENERATED ALWAYS AS IDENTITY NOT NULL, "name" character varying NOT NULL, "isEnabled" boolean NOT NULL, CONSTRAINT "UQ_0cb1810eca363db1e0bf13c3cf3" UNIQUE ("name"), CONSTRAINT "PK_f390205410d884907604a90c0f4" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "directors" ("id" SERIAL NOT NULL, "fullName" character varying NOT NULL, "idNumber" integer NOT NULL, "address" character varying NOT NULL, "phoneNumber" character varying NOT NULL, "avatarId" integer, "statements" character varying NOT NULL, CONSTRAINT "UQ_815e5afdbf88f223fdf05f92ce7" UNIQUE ("idNumber"), CONSTRAINT "REL_c4fb5d311c9b21839ba59bd2cc" UNIQUE ("avatarId"), CONSTRAINT "PK_a9ae28f00c93801aa034a2c1773" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "client" ("id" SERIAL NOT NULL, "name" character varying NOT NULL, "email" character varying NOT NULL, "phoneNumber" character varying NOT NULL, "clientFrom" TIMESTAMP NOT NULL DEFAULT now(), "addressId" integer, "profileId" integer, CONSTRAINT "UQ_6436cc6b79593760b9ef921ef12" UNIQUE ("email"), CONSTRAINT "REL_6e6c7c79fbf5ab39520cd1723e" UNIQUE ("addressId"), CONSTRAINT "REL_dc97f7576f8f410c500eac037e" UNIQUE ("profileId"), CONSTRAINT "PK_96da49381769303a6515a8785c7" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "events" ("id" SERIAL NOT NULL, "title" character varying(255) NOT NULL, "description" text, "startDate" TIMESTAMP NOT NULL, "endDate" TIMESTAMP NOT NULL, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_40731c7151fe4be3116e45ddf73" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "profile_preferred_destinations_destination" ("profileId" integer NOT NULL, "destinationId" integer NOT NULL, CONSTRAINT "PK_6c3655f7b0d105ad46fd03dba8b" PRIMARY KEY ("profileId", "destinationId"))`);
        await queryRunner.query(`CREATE INDEX "IDX_11ffd34b3c831f7653ed63d04c" ON "profile_preferred_destinations_destination" ("profileId") `);
        await queryRunner.query(`CREATE INDEX "IDX_9a1f4d9374fa9948e89e694ddb" ON "profile_preferred_destinations_destination" ("destinationId") `);
        await queryRunner.query(`ALTER TABLE "notification_preference" DROP COLUMN "inAppNotificationEnabled"`);
        await queryRunner.query(`ALTER TABLE "notification_preference" ADD "inAppNotificationEnabled" boolean NOT NULL DEFAULT true`);
        await queryRunner.query(`ALTER TABLE "notification_preference" ADD "inAppEnabled" boolean NOT NULL DEFAULT true`);
        await queryRunner.query(`ALTER TYPE "public"."notification_preference_notificationtype_enum" RENAME TO "notification_preference_notificationtype_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."notification_preference_notificationtype_enum" AS ENUM('booking_update', 'promotions', 'news_alert')`);
        await queryRunner.query(`ALTER TABLE "notification_preference" ALTER COLUMN "notificationType" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "notification_preference" ALTER COLUMN "notificationType" TYPE "public"."notification_preference_notificationtype_enum" USING "notificationType"::"text"::"public"."notification_preference_notificationtype_enum"`);
        await queryRunner.query(`ALTER TABLE "notification_preference" ALTER COLUMN "notificationType" SET DEFAULT 'booking_update'`);
        await queryRunner.query(`DROP TYPE "public"."notification_preference_notificationtype_enum_old"`);
        await queryRunner.query(`ALTER TABLE "notification_preference" ALTER COLUMN "smsEnabled" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "notification_preference" DROP CONSTRAINT "REL_c8721bd56ae600308745ad4974"`);
        await queryRunner.query(`ALTER TABLE "mpesa" ADD CONSTRAINT "FK_4810097984b865f931e1ba11eee" FOREIGN KEY ("paymentId") REFERENCES "payment"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "payment" ADD CONSTRAINT "FK_5738278c92c15e1ec9d27e3a098" FOREIGN KEY ("bookingId") REFERENCES "booking"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "payment" ADD CONSTRAINT "FK_2df0f18e7ce1147ffd6b1a12c79" FOREIGN KEY ("mpesaId") REFERENCES "mpesa"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "booking" ADD CONSTRAINT "FK_336b3f4a235460dc93645fbf222" FOREIGN KEY ("userId") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "booking" ADD CONSTRAINT "FK_c7cbbc825f4a9eb63d6fa130f56" FOREIGN KEY ("tourId") REFERENCES "tour"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "checklist" ADD CONSTRAINT "FK_b3238ba4d2a9f8e4a76a2ad6d43" FOREIGN KEY ("taskId") REFERENCES "task"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "task" ADD CONSTRAINT "FK_30cb9d78297c1f2a2e07df1a616" FOREIGN KEY ("authorId") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "comment" ADD CONSTRAINT "FK_9fc19c95c33ef4d97d09b72ee95" FOREIGN KEY ("taskId") REFERENCES "task"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "comment" ADD CONSTRAINT "FK_276779da446413a0d79598d4fbd" FOREIGN KEY ("authorId") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "custom_event" ADD CONSTRAINT "FK_b0dcebffed8cc892085b583bf28" FOREIGN KEY ("tourId") REFERENCES "tour"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "custom_event" ADD CONSTRAINT "FK_9a87cd2db0a6dadfa8ca8f62c9b" FOREIGN KEY ("userId") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "notification_preference" ADD CONSTRAINT "FK_c8721bd56ae600308745ad49744" FOREIGN KEY ("userId") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "profile" ADD CONSTRAINT "FK_65588ca8ac212b8357637794d6f" FOREIGN KEY ("avatarId") REFERENCES "local_file"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user" ADD CONSTRAINT "FK_217ba147c5de6c107f2fa7fa271" FOREIGN KEY ("addressId") REFERENCES "address"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user" ADD CONSTRAINT "FK_9466682df91534dd95e4dbaa616" FOREIGN KEY ("profileId") REFERENCES "profile"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user" ADD CONSTRAINT "FK_3c60260ce0a4a18aaebccd63a62" FOREIGN KEY ("notificationPreferencesId") REFERENCES "notification_preference"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "review" ADD CONSTRAINT "FK_de57b596937c3f0ee832dc2372a" FOREIGN KEY ("tourId") REFERENCES "tour"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "review" ADD CONSTRAINT "FK_34413365b39e3bf5bea866569b4" FOREIGN KEY ("reviewerId") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "tour" ADD CONSTRAINT "FK_145b22694b435f432a602abdb1c" FOREIGN KEY ("destinationId") REFERENCES "destination"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "destination" ADD CONSTRAINT "FK_e4341255b2e3ca14ad6bb08aa84" FOREIGN KEY ("imageId") REFERENCES "local_file"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "directors" ADD CONSTRAINT "FK_c4fb5d311c9b21839ba59bd2ccf" FOREIGN KEY ("avatarId") REFERENCES "local_file"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "client" ADD CONSTRAINT "FK_6e6c7c79fbf5ab39520cd1723e2" FOREIGN KEY ("addressId") REFERENCES "address"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "client" ADD CONSTRAINT "FK_dc97f7576f8f410c500eac037ed" FOREIGN KEY ("profileId") REFERENCES "profile"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "profile_preferred_destinations_destination" ADD CONSTRAINT "FK_11ffd34b3c831f7653ed63d04c6" FOREIGN KEY ("profileId") REFERENCES "profile"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "profile_preferred_destinations_destination" ADD CONSTRAINT "FK_9a1f4d9374fa9948e89e694ddbb" FOREIGN KEY ("destinationId") REFERENCES "destination"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "profile_preferred_destinations_destination" DROP CONSTRAINT "FK_9a1f4d9374fa9948e89e694ddbb"`);
        await queryRunner.query(`ALTER TABLE "profile_preferred_destinations_destination" DROP CONSTRAINT "FK_11ffd34b3c831f7653ed63d04c6"`);
        await queryRunner.query(`ALTER TABLE "client" DROP CONSTRAINT "FK_dc97f7576f8f410c500eac037ed"`);
        await queryRunner.query(`ALTER TABLE "client" DROP CONSTRAINT "FK_6e6c7c79fbf5ab39520cd1723e2"`);
        await queryRunner.query(`ALTER TABLE "directors" DROP CONSTRAINT "FK_c4fb5d311c9b21839ba59bd2ccf"`);
        await queryRunner.query(`ALTER TABLE "destination" DROP CONSTRAINT "FK_e4341255b2e3ca14ad6bb08aa84"`);
        await queryRunner.query(`ALTER TABLE "tour" DROP CONSTRAINT "FK_145b22694b435f432a602abdb1c"`);
        await queryRunner.query(`ALTER TABLE "review" DROP CONSTRAINT "FK_34413365b39e3bf5bea866569b4"`);
        await queryRunner.query(`ALTER TABLE "review" DROP CONSTRAINT "FK_de57b596937c3f0ee832dc2372a"`);
        await queryRunner.query(`ALTER TABLE "user" DROP CONSTRAINT "FK_3c60260ce0a4a18aaebccd63a62"`);
        await queryRunner.query(`ALTER TABLE "user" DROP CONSTRAINT "FK_9466682df91534dd95e4dbaa616"`);
        await queryRunner.query(`ALTER TABLE "user" DROP CONSTRAINT "FK_217ba147c5de6c107f2fa7fa271"`);
        await queryRunner.query(`ALTER TABLE "profile" DROP CONSTRAINT "FK_65588ca8ac212b8357637794d6f"`);
        await queryRunner.query(`ALTER TABLE "notification_preference" DROP CONSTRAINT "FK_c8721bd56ae600308745ad49744"`);
        await queryRunner.query(`ALTER TABLE "custom_event" DROP CONSTRAINT "FK_9a87cd2db0a6dadfa8ca8f62c9b"`);
        await queryRunner.query(`ALTER TABLE "custom_event" DROP CONSTRAINT "FK_b0dcebffed8cc892085b583bf28"`);
        await queryRunner.query(`ALTER TABLE "comment" DROP CONSTRAINT "FK_276779da446413a0d79598d4fbd"`);
        await queryRunner.query(`ALTER TABLE "comment" DROP CONSTRAINT "FK_9fc19c95c33ef4d97d09b72ee95"`);
        await queryRunner.query(`ALTER TABLE "task" DROP CONSTRAINT "FK_30cb9d78297c1f2a2e07df1a616"`);
        await queryRunner.query(`ALTER TABLE "checklist" DROP CONSTRAINT "FK_b3238ba4d2a9f8e4a76a2ad6d43"`);
        await queryRunner.query(`ALTER TABLE "booking" DROP CONSTRAINT "FK_c7cbbc825f4a9eb63d6fa130f56"`);
        await queryRunner.query(`ALTER TABLE "booking" DROP CONSTRAINT "FK_336b3f4a235460dc93645fbf222"`);
        await queryRunner.query(`ALTER TABLE "payment" DROP CONSTRAINT "FK_2df0f18e7ce1147ffd6b1a12c79"`);
        await queryRunner.query(`ALTER TABLE "payment" DROP CONSTRAINT "FK_5738278c92c15e1ec9d27e3a098"`);
        await queryRunner.query(`ALTER TABLE "mpesa" DROP CONSTRAINT "FK_4810097984b865f931e1ba11eee"`);
        await queryRunner.query(`ALTER TABLE "notification_preference" ADD CONSTRAINT "REL_c8721bd56ae600308745ad4974" UNIQUE ("userId")`);
        await queryRunner.query(`ALTER TABLE "notification_preference" ALTER COLUMN "smsEnabled" SET DEFAULT true`);
        await queryRunner.query(`CREATE TYPE "public"."notification_preference_notificationtype_enum_old" AS ENUM('bookingupdate', 'promotions', 'newsalert')`);
        await queryRunner.query(`ALTER TABLE "notification_preference" ALTER COLUMN "notificationType" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "notification_preference" ALTER COLUMN "notificationType" TYPE "public"."notification_preference_notificationtype_enum_old" USING "notificationType"::"text"::"public"."notification_preference_notificationtype_enum_old"`);
        await queryRunner.query(`ALTER TABLE "notification_preference" ALTER COLUMN "notificationType" SET DEFAULT 'bookingupdate'`);
        await queryRunner.query(`DROP TYPE "public"."notification_preference_notificationtype_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."notification_preference_notificationtype_enum_old" RENAME TO "notification_preference_notificationtype_enum"`);
        await queryRunner.query(`ALTER TABLE "notification_preference" DROP COLUMN "inAppEnabled"`);
        await queryRunner.query(`ALTER TABLE "notification_preference" DROP COLUMN "inAppNotificationEnabled"`);
        await queryRunner.query(`ALTER TABLE "notification_preference" ADD "inAppNotificationEnabled" boolean NOT NULL DEFAULT true`);
        await queryRunner.query(`DROP INDEX "public"."IDX_9a1f4d9374fa9948e89e694ddb"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_11ffd34b3c831f7653ed63d04c"`);
        await queryRunner.query(`DROP TABLE "profile_preferred_destinations_destination"`);
        await queryRunner.query(`DROP TABLE "events"`);
        await queryRunner.query(`DROP TABLE "client"`);
        await queryRunner.query(`DROP TABLE "directors"`);
        await queryRunner.query(`DROP TABLE "feature_flag"`);
        await queryRunner.query(`DROP TABLE "destination"`);
        await queryRunner.query(`DROP TABLE "tour"`);
        await queryRunner.query(`DROP TYPE "public"."tour_difficulty_enum"`);
        await queryRunner.query(`DROP TABLE "review"`);
        await queryRunner.query(`DROP TABLE "user"`);
        await queryRunner.query(`DROP TYPE "public"."user_permissions_enum"`);
        await queryRunner.query(`DROP TABLE "profile"`);
        await queryRunner.query(`DROP TYPE "public"."profile_gender_enum"`);
        await queryRunner.query(`DROP TYPE "public"."profile_group_enum"`);
        await queryRunner.query(`DROP TYPE "public"."profile_status_enum"`);
        await queryRunner.query(`DROP TABLE "local_file"`);
        await queryRunner.query(`DROP TABLE "address"`);
        await queryRunner.query(`DROP TABLE "notification_preference"`);
        await queryRunner.query(`DROP TYPE "public"."notification_preference_notificationtype_enum"`);
        await queryRunner.query(`DROP TABLE "custom_event"`);
        await queryRunner.query(`DROP TABLE "comment"`);
        await queryRunner.query(`DROP TABLE "task"`);
        await queryRunner.query(`DROP TYPE "public"."task_priority_enum"`);
        await queryRunner.query(`DROP TABLE "checklist"`);
        await queryRunner.query(`DROP TABLE "booking"`);
        await queryRunner.query(`DROP TYPE "public"."booking_bookingtype_enum"`);
        await queryRunner.query(`DROP TYPE "public"."booking_status_enum"`);
        await queryRunner.query(`DROP TABLE "payment"`);
        await queryRunner.query(`DROP TABLE "mpesa"`);
    }

}
